---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

const posts = await getCollection('posts');

// Función para truncar texto si es necesario
function truncate(text, length) {
  return text.length > length ? text.substring(0, length) + '...' : text;
}

// Función para generar la URL correcta de la imagen
function getImageUrl(post) {
  if (post.data.image && !post.data.image.includes('/images/posts-images/')) {
    return `/images/posts-images/${post.slug}/${post.data.image}`;
  }
  return post.data.image;  // Si ya tiene la ruta correcta, devuélvela tal cual
}
---

<Layout title="Blog">
  <main class="blog-page">
    <h1>Blog</h1>
    <div class="post-list">
      {posts.map((post) => (
        <article class="post-item">
          {post.data.image && (
            <img src={getImageUrl(post)} alt={post.data.title} />
          )}
          <div class="post-content">
            <h2>{post.data.title}</h2>
            <p>{truncate(post.data.description, 150)}</p>
            <div class="categories">
              {post.data.categories.map((category) => (
                <span class="category">{category}</span>
              ))}
            </div>
            <a href={`/blog/${post.slug}`}>Leer artículo completo</a>
          </div>
        </article>
      ))}
    </div>
  </main>
</Layout>

<style>
  .blog-page {
    padding: 1rem; /* Ajustado para móviles */
    background: var(--gradient-secondary);
    min-height: 100vh;
    color: var(--color-text);
  }

  h1 {
    font-size: 2rem; /* Ajustado para móviles */
    margin-bottom: 1.5rem;
    color: var(--color-accent);
    text-align: center; /* Centrar el título */
  }

  .post-list {
    display: flex;
    flex-direction: column; /* Lista vertical en móviles */
    gap: 1rem;
  }

  .post-item {
    background: var(--gradient-primary);
    border-radius: 8px;
    overflow: hidden;
    display: flex;
    flex-direction: column; /* Orden vertical en móviles */
    transition: transform 0.3s ease;
  }

  .post-item:hover {
    transform: translateY(-5px);
  }

  .post-item img {
    width: 100%; /* Ajustado para ocupar el ancho completo */
    height: auto; /* Mantener la relación de aspecto */
    object-fit: cover;
  }

  .post-content {
    padding: 1rem;
    flex: 1;
  }

  .post-item h2 {
    color: var(--color-accent);
    margin-bottom: 0.5rem;
    font-size: 1.5rem; /* Ajustado para móviles */
  }

  .categories {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }

  .category {
    background-color: var(--color-accent);
    color: var(--color-text);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
  }

  .post-item a {
    display: inline-block;
    margin-top: 0.5rem; /* Ajustado para móviles */
    color: var(--color-accent);
    text-decoration: none;
    font-weight: bold;
  }

  .post-item a:hover {
    text-decoration: underline;
  }

  @media (min-width: 768px) {
    .blog-page {
      padding: 2rem;
    }

    h1 {
      font-size: 2.5rem;
      margin-bottom: 2rem;
    }

    .post-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
    }

    .post-item {
      flex-direction: row;
    }

    .post-item img {
      width: 300px; /* Imagen fija en pantallas más grandes */
      height: 200px;
    }

    .post-content {
      padding: 1.5rem;
    }

    .post-item h2 {
      font-size: 2rem;
    }

    .post-item a {
      margin-top: 1rem;
    }
  }
</style>
